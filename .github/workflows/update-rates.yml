name: Update Currency Rates

on:
  schedule:
    - cron: '0 4 * * *'  # Daily at 12:00 AM Dominican Republic (UTC-4)
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ master, main ]

jobs:
  update-rates:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get rates from ExchangeRate-API
        run: |
          echo "🔄 Getting rates from ExchangeRate-API..."
          curl -X GET "https://open.er-api.com/v6/latest/USD" \
            -H "Content-Type: application/json" \
            -o exchange-rates.json \
            --max-time 30 \
            --connect-timeout 10 \
            --retry 3 \
            --retry-delay 2
          
          echo "✅ ExchangeRate-API response saved to exchange-rates.json"
          echo "📊 Response size: $(wc -c < exchange-rates.json) bytes"
          
          # Convert rates to our format (1/rate for each currency)
          echo "🔄 Converting rates to our format..."
          node -e "
            const fs = require('fs');
            const data = JSON.parse(fs.readFileSync('exchange-rates.json', 'utf8'));
            
            // Excluded currencies that cause 404 errors in production
            const excludedCurrencies = ['CLF', 'CNH', 'FOK', 'KID', 'SSP'];
            
            // Convert rates: 1/rate for each currency (excluding problem currencies)
            const convertedRates = {};
            Object.keys(data.rates).forEach(currency => {
              // Skip excluded currencies
              if (!excludedCurrencies.includes(currency)) {
                if (currency !== 'USD') {
                  convertedRates[currency] = 1 / data.rates[currency];
                } else {
                  convertedRates[currency] = 1;
                }
              }
            });
            
            // Create our format
            const result = {
              success: true,
              rates: convertedRates,
              currencies: Object.keys(convertedRates).map(code => ({
                code: code,
                name: code,
                symbol: code,
                flag: \`https://www.xe.com/svgs/flags/\${code.toLowerCase()}.static.svg\`
              })),
              timestamp: new Date().toISOString(),
              source: 'exchange-rate-api'
            };
            
            fs.writeFileSync('rates.json', JSON.stringify(result, null, 2));
            console.log('✅ Converted rates saved to rates.json');
            console.log('⚠️  Excluded currencies:', excludedCurrencies.join(', '));
          "

      - name: Save to Netlify Blobs
        run: |
          echo "💾 Saving rates to Netlify Blobs..."
          
          # Create the data structure for Blobs
          cat > blob-data.json << EOF
          {
            "rates": $(cat rates.json | jq '.rates'),
            "currencies": $(cat rates.json | jq '.currencies'),
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "source": "github-actions"
          }
          EOF
          
          # Save to Netlify Blobs using Netlify Function
          curl -X PUT "${{ secrets.SITE_URL }}/.netlify/functions/currency-rates" \
            -H "Content-Type: application/json" \
            -d @blob-data.json
          
          echo "✅ Rates saved to Netlify Blobs"

      - name: Verify storage
        run: |
          echo "🔍 Verifying stored data..."
          curl -X GET "${{ secrets.SITE_URL }}/.netlify/functions/currency-rates" \
            -o verify.json
          
          echo "📋 Verification response:"
          cat verify.json | jq '.'
